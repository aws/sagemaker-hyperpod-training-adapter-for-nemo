name:
    - hf_llama_8b # Go with SFA

trainer:
  devices: 8
  num_nodes: 4
  accelerator: gpu
  precision: bf16
  max_steps: 50
  log_every_n_steps: 1
  accumulate_grad_batches: 1


exp_manager:
  exp_dir: ???
  name: experiment
  create_tensorboard_logger: True
  create_checkpoint_callback: True
  checkpoint_callback_params:
    # Set save_top_k = 0 to disable sharded checkpointing
    save_top_k: 0
    every_n_train_steps: 10
    monitor: "step"
    mode: "max"
    save_last: True
  checkpoint_dir: ${exp_manager.exp_dir}/checkpoints/
  resume_from_checkpoint: null
  # Set auto_checkpoint = False to disable auto resilience checkpointing
  auto_checkpoint:
    enabled: False
  export_full_model:
    # Set every_n_train_steps = 0 to disable full checkpointing
    every_n_train_steps: 0
    save_last: True

use_smp: True #enable Rubik
distributed_backend: nccl


# Start training from pretrained model
model:
  model_type: llama_v3 # TODO: need functionality to parse model type automatically, this arg can stil be kept
  fsdp: True
  train_batch_size: 2
  tensor_model_parallel_degree: 1
  expert_model_parallel_degree: 1
  context_parallel_degree: 1
  moe: False
  activation_checkpointing: True
  activation_loading_horizon: 2
  delayed_param: True
  offload_activations: False
  seed: 12345
  grad_clip: 1.0


  # FSDP Configs
  sharding_strategy: hybrid_shard
  forward_prefetch: True
  shard_degree: 8
  backward_fetch_policy: backward_pre
  auto_wrap_policy: transformer_auto_wrap_policy
  limit_all_gathers: False
  use_orig_param: False

  # model architecture
  max_context_width: 8192
  max_position_embeddings: ${.max_context_width}
  num_layers: 32
  hidden_width: 4096
  num_heads: 32
  intermediate_size: 14336
  initializer_range: 0.02
  pad_token_id: 0
  layernorm_epsilon: 1e-5
  vocab_size: 128256
  num_key_value_heads: null
  use_flash_attention: True

  # Transformer Engine
  fp8: False
  fp8_amax_history_len: 1024
  fp8_amax_compute_algo: max

  do_finetune: False
  # Rubik calls it `pretrained_model_weights` but we opted to follow the name used by HF
  hf_model_name_or_path: null # "/fsx/hf_pretrained_models/Meta-Llama-3-8B"

  precision: ${trainer.precision}

  lr_decay_iters: 47683

  log_reduced_training_loss: True

  # Optimizer
  optim:
    name: adamw
    lr: 2e-4
    weight_decay: 0.01
    betas:
    - 0.9
    - 0.98
    sched:
      name: CosineAnnealing
      warmup_steps: 500
      constant_steps: 0
      min_lr: 2e-5

  # Data
  data:
    train_dir: ["/fsx/datasets/c4/en/hf-tokenized/llama3/train"]
    val_dir: ["/fsx/datasets/c4/en/hf-tokenized/llama3/val"]
    dataset_type: hf
    use_synthetic_data: True

  # PEFT
  peft:
    peft_type: null # lora
